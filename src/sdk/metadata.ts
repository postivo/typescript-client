/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { metadataGetPredefinedConfigs } from "../funcs/metadataGetPredefinedConfigs.js";
import { metadataList } from "../funcs/metadataList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Metadata extends ClientSDK {
  /**
   * List metadata
   *
   * @remarks
   * Retrieve a complete list of all types for shipments and their possible values. The method has no body and takes no parameters. The response includes metadata such as carrier types, service types, and more.
   */
  async list(
    options?: RequestOptions,
  ): Promise<operations.ListMetadataResponse> {
    return unwrapAsync(metadataList(
      this,
      options,
    ));
  }

  /**
   * List predefined configs
   *
   * @remarks
   * Retrieve a complete list of predefined shipment configurations. The method has no body and takes no parameters. The response includes all stored configuration options.
   */
  async getPredefinedConfigs(
    options?: RequestOptions,
  ): Promise<operations.ListPredefinedConfigsResponse> {
    return unwrapAsync(metadataGetPredefinedConfigs(
      this,
      options,
    ));
  }
}
