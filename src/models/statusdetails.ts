/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ShipmentDetails,
  ShipmentDetails$inboundSchema,
  ShipmentDetails$Outbound,
  ShipmentDetails$outboundSchema,
} from "./shipmentdetails.js";
import {
  StatusEvent,
  StatusEvent$inboundSchema,
  StatusEvent$Outbound,
  StatusEvent$outboundSchema,
} from "./statusevent.js";

/**
 * Details of a single shipment and its status events
 */
export type StatusDetails = {
  /**
   * Single shipment details
   */
  shipmentDetails?: ShipmentDetails | undefined;
  /**
   * List of status events for the shipment.
   */
  statusEvents?: Array<StatusEvent> | null | undefined;
};

/** @internal */
export const StatusDetails$inboundSchema: z.ZodType<
  StatusDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  shipment_details: ShipmentDetails$inboundSchema.optional(),
  status_events: z.nullable(z.array(StatusEvent$inboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    "shipment_details": "shipmentDetails",
    "status_events": "statusEvents",
  });
});

/** @internal */
export type StatusDetails$Outbound = {
  shipment_details?: ShipmentDetails$Outbound | undefined;
  status_events?: Array<StatusEvent$Outbound> | null | undefined;
};

/** @internal */
export const StatusDetails$outboundSchema: z.ZodType<
  StatusDetails$Outbound,
  z.ZodTypeDef,
  StatusDetails
> = z.object({
  shipmentDetails: ShipmentDetails$outboundSchema.optional(),
  statusEvents: z.nullable(z.array(StatusEvent$outboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    shipmentDetails: "shipment_details",
    statusEvents: "status_events",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StatusDetails$ {
  /** @deprecated use `StatusDetails$inboundSchema` instead. */
  export const inboundSchema = StatusDetails$inboundSchema;
  /** @deprecated use `StatusDetails$outboundSchema` instead. */
  export const outboundSchema = StatusDetails$outboundSchema;
  /** @deprecated use `StatusDetails$Outbound` instead. */
  export type Outbound = StatusDetails$Outbound;
}

export function statusDetailsToJSON(statusDetails: StatusDetails): string {
  return JSON.stringify(StatusDetails$outboundSchema.parse(statusDetails));
}

export function statusDetailsFromJSON(
  jsonString: string,
): SafeParseResult<StatusDetails, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StatusDetails$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StatusDetails' from JSON`,
  );
}
