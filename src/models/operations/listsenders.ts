/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type ListSendersResponse =
  | Array<models.SenderDetails>
  | models.ErrorResponse;

/** @internal */
export const ListSendersResponse$inboundSchema: z.ZodType<
  ListSendersResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(models.SenderDetails$inboundSchema),
  models.ErrorResponse$inboundSchema,
]);

/** @internal */
export type ListSendersResponse$Outbound =
  | Array<models.SenderDetails$Outbound>
  | models.ErrorResponse$Outbound;

/** @internal */
export const ListSendersResponse$outboundSchema: z.ZodType<
  ListSendersResponse$Outbound,
  z.ZodTypeDef,
  ListSendersResponse
> = z.union([
  z.array(models.SenderDetails$outboundSchema),
  models.ErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListSendersResponse$ {
  /** @deprecated use `ListSendersResponse$inboundSchema` instead. */
  export const inboundSchema = ListSendersResponse$inboundSchema;
  /** @deprecated use `ListSendersResponse$outboundSchema` instead. */
  export const outboundSchema = ListSendersResponse$outboundSchema;
  /** @deprecated use `ListSendersResponse$Outbound` instead. */
  export type Outbound = ListSendersResponse$Outbound;
}

export function listSendersResponseToJSON(
  listSendersResponse: ListSendersResponse,
): string {
  return JSON.stringify(
    ListSendersResponse$outboundSchema.parse(listSendersResponse),
  );
}

export function listSendersResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListSendersResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListSendersResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListSendersResponse' from JSON`,
  );
}
